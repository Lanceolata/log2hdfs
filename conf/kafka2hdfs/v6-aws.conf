# hdfs configuration
[hdfs]
type = command
namenode = hdfs://hadoopcluster
port = 8020
user = data-infra
put = hadoop fs -put
append = hadoop fs -appendToFile
lzo.index = hadoop jar /usr/hdp/2.4.0.0-169/hadoop/lib/hadoop-lzo-0.6.0.2.4.0.0-169.jar com.hadoop.compression.lzo.LzoIndexer

# librdkafka configuration
[kafka]
client.id = kafka2hdfs_old
group.id = kafka2hdfs_old
enable.auto.commit = true
auto.commit.interval.ms = 5000
enable.auto.offset.store = true
queued.min.messages = 20000
offset.store.method = file

# old kafka
metadata.broker.list = 192.168.145.201:9092,192.168.145.202:9092,192.168.145.203:9092,192.168.145.204:9092,192.168.145.205:9092,192.168.145.206:9092,192.168.145.207:9092,192.168.145.208:9092,192.168.145.209:9092,192.168.145.210:9092
broker.version.fallback = 0.8.2

# new kafka
#metadata.broker.list = 192.168.145.216:9092,192.168.145.217:9092,192.168.145.218:9092,192.168.145.221:9092,192.168.145.222:9092,192.168.145.223:9092,192.168.145.224:9092,192.168.145.225:9092,192.168.145.226:9092,192.168.145.227:9092

[default]
# kafka
kafka.enable.auto.commit = true
kafka.auto.commit.interval.ms = 5000
#kafka.auto.offset.reset = smallest
kafka.offset.store.method = file
kafka.offset.store.path = v6-aws-offset

root.dir = v6-aws-k2h
log.format = ef
path.format = normal
consume.type = ef
upload.type = text
parallel = 3
compress.lzo = /usr/local/bin/lzop -1 -U -f --ignore-warn
compress.orc = 
compress.mv = 
compress.appendcvt = 

consume.interval = 3600
complete.interval = 600
complete.maxsize = 0
retention.seconds = 0
upload.interval = 20

[adv]
partitions = 0-9
offsets = -1000
consume.interval = 900
complete.interval = 1800
complete.maxsize = 104857600
retention.seconds = 86400
hdfs.path = /user/root/logs/adv/pday=%Y%m%d/phour=%H/%t_%Y%m%d%H%M.seq

[cvt]
partitions = 0-4
offsets = -1000
consume.interval = 900
complete.interval = 1800
upload.type = appendcvt
hdfs.path = /user/root/logs/cvt/pday=%Y%m%d/phour=%H/%t_%Y%m%d%H%M.seq
hdfs.path.delay = /data/production/report/rpt_conversion_othersource/pday=%Y%m%d/phour=%H/appendcvt_%Y%m%d%H%M.seq
compress.appendcvt = java -cp /data/users/data-infra/kafka2hdfs/v6-aws/appendcvt.jar com.ipinyou.appendcvt.Convert

[idm]
partitions = 0-7
offsets = -1000
hdfs.path = /user/root/logs/cookie_mapping/pday=%Y%m%d/phour=%H/%t_%Y%m%d%H%M.seq

[udcr]
partitions = 0-1
offsets = -1000
hdfs.path = /user/root/flume/udcr/pday=%Y%m%d/phour=%H/%t_%Y%m%d%H%M.seq

# aws

[bid_aws]
partitions = 0-3
offsets = -1000
log.format = efdevice
upload.type = orc
hdfs.path = /user/root/logs/bid_aws/pday=%Y%m%d/phour=%H/%t_%Y%m%d%H%M_%D.seq.%T.orc
compress.orc = java -cp /data/users/data-infra/kafka2hdfs/v6-aws/compress.jar com.ipinyou.compress.OrcCompress -c /data/users/data-infra/kafka2hdfs/v6-aws/schema.conf -t bid-aws

[unbid_aws]
partitions = 0-7
offsets = -1000
log.format = efdevice
upload.type = orc
hdfs.path = /user/root/logs/unbid_aws/pday=%Y%m%d/phour=%H/%t_%Y%m%d%H%M_%D.seq.%T.orc
compress.orc = java -cp /data/users/data-infra/kafka2hdfs/v6-aws/compress.jar com.ipinyou.compress.OrcCompress -c /data/users/data-infra/kafka2hdfs/v6-aws/schema.conf -t bid-aws

[ic_aws]
partitions = 0-3
offsets = -1000
consume.interval = 1800
log.format = eficaws
hdfs.path = /user/root/logs/ic_aws/pday=%Y%m%d/phour=%H/%A_aws_%D_%Y%m%d%H%M.seq